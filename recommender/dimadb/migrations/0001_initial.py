# Generated by Django 3.2.5 on 2021-12-29 17:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type_id', models.CharField(max_length=50)),
                ('activity_type_name', models.CharField(max_length=50)),
                ('score', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessEntity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=50)),
                ('entity_name', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('created_by', models.CharField(max_length=50)),
                ('modified_at', models.DateTimeField()),
                ('modified_by', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(max_length=50)),
                ('contact_name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone1', models.CharField(max_length=50)),
                ('phone2', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=50)),
                ('business_hour', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CulturalProduct',
            fields=[
                ('product_id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=150, unique=True)),
                ('slug', models.CharField(max_length=150, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('url', models.URLField(blank=True, null=True, verbose_name='source_url')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('product_type', models.CharField(choices=[('item', 'ITEM'), ('event', 'EVENT')], default='event', max_length=10)),
            ],
            options={
                'db_table': 'culturalproduct',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(max_length=50)),
                ('ip_address', models.CharField(max_length=50)),
                ('contact_id', models.CharField(max_length=50)),
                ('profile_id', models.CharField(max_length=50)),
                ('location_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'domain',
            },
        ),
        migrations.CreateModel(
            name='EntityContactPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=50)),
                ('contact_id', models.CharField(max_length=50)),
                ('contact_role', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EntityEventRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=50)),
                ('event_id', models.CharField(max_length=50)),
                ('role_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EntityLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=50)),
                ('location_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EntityProductRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=50)),
                ('product_id', models.CharField(max_length=50)),
                ('role_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EntityResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.CharField(max_length=50)),
                ('resource_id', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EventLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=50)),
                ('location_id', models.CharField(max_length=50)),
                ('room', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='EventPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_id', models.CharField(max_length=50)),
                ('preference_type', models.CharField(max_length=50)),
                ('preference_value', models.DecimalField(decimal_places=2, max_digits=5)),
                ('event_id', models.CharField(max_length=50)),
                ('activity_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EventProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=50)),
                ('product_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='EventResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.CharField(max_length=50)),
                ('resource_id', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('event_id', models.CharField(max_length=150, unique=True)),
                ('event_name', models.CharField(max_length=150)),
                ('event_title', models.CharField(max_length=150)),
                ('event_type', models.CharField(max_length=150)),
                ('event_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('price_type', models.CharField(max_length=50)),
                ('slug', models.CharField(max_length=150)),
                ('lang', models.CharField(max_length=150)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('next_date', models.DateTimeField()),
                ('count_down', models.IntegerField(default=0)),
                ('recurring_freg', models.IntegerField(default=0)),
                ('recurring_count', models.IntegerField(default=0)),
                ('recurring_by_day', models.IntegerField(default=0)),
                ('isPublic', models.CharField(choices=[('True', True), ('False', False)], default=True, max_length=10)),
                ('status', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('created_by', models.CharField(max_length=150)),
                ('modified_at', models.DateTimeField()),
                ('modified_by', models.CharField(max_length=150)),
                ('group_id', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='EventSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(max_length=50)),
                ('target_id', models.CharField(max_length=50)),
                ('similarity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('algo', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='GeoLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_id', models.CharField(max_length=50)),
                ('location_name', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=150)),
                ('address2', models.CharField(max_length=150)),
                ('longitude', models.CharField(max_length=50)),
                ('latitude', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('region', models.CharField(max_length=50)),
                ('zip', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_id', models.CharField(max_length=50)),
                ('session_id', models.CharField(max_length=50)),
                ('activity_id', models.CharField(max_length=50)),
                ('page_id', models.CharField(max_length=50)),
                ('journey_id', models.CharField(max_length=50)),
                ('interaction_number', models.IntegerField(default=0)),
                ('is_entrance', models.CharField(choices=[('True', True), ('False', False)], max_length=10)),
                ('is_exit', models.CharField(choices=[('True', True), ('False', False)], max_length=10)),
                ('created_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Journey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journey_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LdaSimilarityVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('n_topics', models.IntegerField(default=0)),
                ('n_products', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=150)),
                ('address_2', models.CharField(max_length=150, null=True)),
                ('state', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('zip', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(decimal_places=9, max_digits=11)),
                ('longitude', models.DecimalField(decimal_places=9, max_digits=11)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_name', models.CharField(max_length=150)),
                ('alternative_name', models.CharField(max_length=150, null=True)),
                ('website', models.URLField(max_length=300, null=True)),
                ('description', models.CharField(max_length=300, null=True)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='PriceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_type_id', models.CharField(max_length=50)),
                ('price_type_name', models.CharField(max_length=50)),
                ('price_type_currency', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProductPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_id', models.CharField(max_length=50)),
                ('preference_type', models.CharField(max_length=50)),
                ('preference_value', models.DecimalField(decimal_places=2, max_digits=5)),
                ('product_id', models.CharField(max_length=50)),
                ('activity_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProductResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.CharField(max_length=50)),
                ('resource_id', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('product_id', models.CharField(max_length=150, unique=True)),
                ('product_name', models.CharField(max_length=150)),
                ('product_type', models.CharField(max_length=150)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('price_type', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('created_by', models.CharField(max_length=150)),
                ('modified_at', models.DateTimeField()),
                ('modified_by', models.CharField(max_length=150)),
                ('group_id', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.CharField(max_length=50)),
                ('target_id', models.CharField(max_length=50)),
                ('similarity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('algo', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.IntegerField(default=0)),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], default='event', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_id', models.CharField(max_length=50)),
                ('resource_name', models.CharField(max_length=150)),
                ('resource_type', models.CharField(max_length=50)),
                ('resource_url', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_id', models.CharField(max_length=50)),
                ('visit_date', models.DateField()),
                ('visit_start_time', models.DateTimeField()),
                ('visit_end_time', models.DateTimeField()),
                ('visit_number', models.CharField(max_length=50)),
                ('visit_duration', models.IntegerField(default=0)),
                ('landing_page', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField()),
                ('customer_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='WebActivityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('description', models.TextField()),
                ('value', models.DecimalField(decimal_places=2, max_digits=3)),
            ],
        ),
        migrations.CreateModel(
            name='WebPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.CharField(max_length=50)),
                ('url', models.CharField(max_length=200)),
                ('page_path', models.CharField(max_length=200)),
                ('page_title', models.CharField(max_length=150)),
                ('search_keyword', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='CulturalItem',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dimadb.culturalproduct')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'culturalitem',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dimadb.culturalproduct')),
                ('status', models.CharField(max_length=16)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='WebActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.CharField(max_length=50)),
                ('session', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField()),
                ('browser', models.CharField(max_length=80, null=True)),
                ('visitor', models.CharField(max_length=20)),
                ('activity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimadb.webactivitytype')),
            ],
        ),
        migrations.CreateModel(
            name='WebActivities',
            fields=[
                ('id', models.CharField(max_length=150, primary_key=True, serialize=False)),
                ('activity_id', models.CharField(max_length=50)),
                ('activity_duration', models.IntegerField(default=0)),
                ('activity_description', models.TextField()),
                ('created_at', models.DateTimeField()),
                ('activity_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimadb.activitytype')),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('slug', models.CharField(max_length=150, unique=True)),
                ('rating', models.DecimalField(decimal_places=1, default=0, max_digits=2)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='dimadb.location')),
            ],
            options={
                'db_table': 'venue',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgs', models.ManyToManyField(to='dimadb.Organization', verbose_name='member')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LdaSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity', models.DecimalField(decimal_places=7, max_digits=10)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_product', to='dimadb.culturalproduct')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_product', to='dimadb.culturalproduct')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimadb.ldasimilarityversion')),
            ],
        ),
        migrations.AddField(
            model_name='culturalproduct',
            name='domain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dimadb.domain'),
        ),
        migrations.AddField(
            model_name='culturalproduct',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimadb.organization'),
        ),
        migrations.CreateModel(
            name='ContainProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='dimadb.webactivity')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimadb.culturalproduct')),
            ],
            options={
                'verbose_name': 'Activity - Product',
            },
        ),
        migrations.CreateModel(
            name='TakePlace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('weekend', models.BooleanField(verbose_name='is_on_weekend')),
                ('venue', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='dimadb.venue')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dimadb.event')),
            ],
            options={
                'db_table': 'takeplace',
            },
        ),
    ]
